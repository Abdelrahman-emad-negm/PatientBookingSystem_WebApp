@model List<PatientBooking.Models.Appointment>

@{
    ViewData["Title"] = "Weekly Schedule";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var startOfWeek = (DateTime)ViewBag.StartOfWeek;
    var endOfWeek = (DateTime)ViewBag.EndOfWeek;
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">
                <i class="fas fa-calendar-week me-2"></i> Weekly Schedule
            </h4>
        </div>
        <div class="card-body">
            <p class="text-center text-muted mb-4">
                From <strong>@startOfWeek.ToString("dd MMM yyyy")</strong>
                to <strong>@endOfWeek.AddDays(-1).ToString("dd MMM yyyy")</strong>
            </p>

            @if (!Model.Any())
            {
                <div class="alert alert-secondary text-center">
                    <i class="fas fa-info-circle me-1"></i> No appointments scheduled this week.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Date</th>
                                <th>Time</th>
                                <th>Patient</th>
                                <th>Status</th>
                                <th class="text-center">State</th> @* Upcoming / Past *@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var a in Model)
                            {
                                var appointmentDateTime = a.Date.Add(a.TimeSlot);
                                var isUpcoming = appointmentDateTime > DateTime.Now;
                                var displayDate = appointmentDateTime.ToString("dddd, dd MMM yyyy"); // Monday, 16 Sep 2025
                                var displayTime = appointmentDateTime.ToString("hh:mm tt"); // 03:00 PM
                                var patientName = string.IsNullOrWhiteSpace(a.Patient?.Name) ? "—" : a.Patient.Name;

                                var (statusClass, statusIcon) = a.Status switch
                                {
                                    PatientBooking.Models.AppointmentStatus.Confirmed => ("badge bg-primary", "fas fa-check-circle"),
                                    PatientBooking.Models.AppointmentStatus.Pending => ("badge bg-warning text-dark", "fas fa-hourglass-half"),
                                    PatientBooking.Models.AppointmentStatus.Cancelled => ("badge bg-danger", "fas fa-times-circle"),
                                    PatientBooking.Models.AppointmentStatus.Available => ("badge bg-success", "fas fa-calendar-check"),
                                    PatientBooking.Models.AppointmentStatus.Completed => ("badge bg-secondary", "fas fa-clipboard-check"),
                                    _ => ("badge bg-light text-dark", "fas fa-info-circle")
                                };
                                <tr>
                                    <td>@displayDate</td>
                                    <td>@displayTime</td>
                                    <td>@patientName</td>
                                    <td>
                                        <span class="@statusClass">
                                            <i class="@statusIcon me-1"></i> @a.Status
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        @if (isUpcoming)
                                        {
                                            <span class="badge bg-info text-dark">Upcoming</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Past</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>
