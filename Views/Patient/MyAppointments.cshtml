@model List<PatientBooking.Models.Appointment>

@{
    ViewData["Title"] = "My Appointments";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var upcoming = Model.Where(a => a.Date >= DateTime.Today)
                        .OrderBy(a => a.Date)
                        .ThenBy(a => a.TimeSlot)
                        .ToList();

    var past = Model.Where(a => a.Date < DateTime.Today)
                    .OrderByDescending(a => a.Date)
                    .ThenByDescending(a => a.TimeSlot)
                    .ToList();
}

<div class="container mt-5">
    <h2 class="text-center mb-4"><i class="fas fa-calendar-check text-primary"></i> My Appointments</h2>

    <!-- Tabs -->
    <ul class="nav nav-tabs justify-content-center" id="appointmentTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="upcoming-tab" data-bs-toggle="tab" data-bs-target="#upcoming" type="button" role="tab">
                <i class="fas fa-clock me-1"></i> Upcoming
                <span class="badge bg-primary ms-1">@upcoming.Count</span>
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="past-tab" data-bs-toggle="tab" data-bs-target="#past" type="button" role="tab">
                <i class="fas fa-history me-1"></i> Past
                <span class="badge bg-secondary ms-1">@past.Count</span>
            </button>
        </li>
    </ul>

    <div class="tab-content mt-4" id="appointmentTabsContent">

        <!-- Upcoming Appointments -->
        <div class="tab-pane fade show active" id="upcoming" role="tabpanel">
            @if (!upcoming.Any())
            {
                <div class="alert alert-info text-center">No upcoming appointments.</div>
            }
            else
            {
                <div class="row">
                    @foreach (var a in upcoming)
                    {
                        var statusClass = a.Status switch
                        {
                            PatientBooking.Models.AppointmentStatus.Confirmed => "badge bg-success",
                            PatientBooking.Models.AppointmentStatus.Pending => "badge bg-warning text-dark",
                            PatientBooking.Models.AppointmentStatus.Cancelled => "badge bg-danger",
                            _ => "badge bg-secondary"
                        };
                        var doctorName = a.Doctor?.User?.Name ?? "Doctor";
                        var specialtyName = a.Doctor?.Specialty.ToString() ?? "N/A";

                        <div class="col-md-4 mb-4">
                            <div class="card shadow-sm appointment-card h-100">
                                <div class="ratio ratio-16x9">
                                    @if (!string.IsNullOrEmpty(a.Doctor?.Photo))
                                    {
                                        <img src="@a.Doctor.Photo"
                                             class="card-img-top"
                                             style="object-fit: cover;" alt="@doctorName" />
                                    }
                                    else
                                    {
                                        <div class="default-doctor-avatar d-flex flex-column align-items-center justify-content-center">
                                            <i class="fas fa-user-md fa-3x mb-2"></i>
                                            <span>@doctorName</span>
                                        </div>
                                    }
                                </div>
                                <div class="card-body p-3">
                                    <h5 class="card-title text-primary text-truncate mb-2" title="@doctorName">
                                        <i class="fas fa-user-md me-2"></i> @doctorName
                                    </h5>
                                    <div class="mb-2">
                                        <span class="badge bg-info text-dark fs-6 px-2 py-1">@specialtyName</span>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center mb-3 p-2 bg-light rounded">
                                        <span class="fw-bold text-dark"><i class="fas fa-calendar me-2 text-primary"></i> @a.Date.ToString("dd MMM yyyy")</span>
                                        <span class="fw-bold text-dark"><i class="fas fa-clock me-2 text-success"></i> @a.TimeSlot.ToString(@"hh\:mm")</span>
                                    </div>
                                    <div class="mb-3 text-center">
                                        <span class="@statusClass fs-6 px-3 py-2">@a.Status</span>
                                    </div>
                                </div>

                                    @if (a.Status != PatientBooking.Models.AppointmentStatus.Cancelled && a.Date >= DateTime.Today)
                                    {
                                        <form asp-action="CancelAppointment" method="post"
                                              onsubmit="return confirmCancel('@doctorName', '@a.Date.ToString("dd MMM yyyy")', '@a.TimeSlot.ToString(@"hh\:mm")')">
                                            <input type="hidden" name="appointmentId" value="@a.AppointmentId" />
                                            <button type="submit" class="btn btn-danger w-100 py-2">
                                                <i class="fas fa-times me-1"></i> Cancel Appointment
                                            </button>
                                        </form>
                                    }
                                    else
                                    {
                                        <button class="btn btn-secondary w-100 py-2" disabled title="Not cancellable">
                                            <i class="fas fa-ban me-1"></i> Cannot Cancel
                                        </button>
                                    }
                                </div>
                            </div>
                    }
                </div>
            }
        </div>

        <!-- Past Appointments -->
        <div class="tab-pane fade" id="past" role="tabpanel">
            @if (!past.Any())
            {
                <div class="alert alert-secondary text-center">No past appointments.</div>
            }
            else
            {
                <div class="row">
                    @foreach (var a in past)
                    {
                        var statusClass = a.Status switch
                        {
                            PatientBooking.Models.AppointmentStatus.Confirmed => "badge bg-success",
                            PatientBooking.Models.AppointmentStatus.Completed => "badge bg-secondary",
                            PatientBooking.Models.AppointmentStatus.Cancelled => "badge bg-danger",
                            _ => "badge bg-light text-dark"
                        };
                        var doctorName = a.Doctor?.User?.Name ?? "Doctor";
                        var specialtyName = a.Doctor?.Specialty.ToString() ?? "N/A";

                        <div class="col-md-4 mb-4">
                            <div class="card shadow-sm appointment-card h-100 bg-light">
                                <div class="ratio ratio-16x9">
                                    @if (!string.IsNullOrEmpty(a.Doctor?.Photo))
                                    {
                                        <img src="@a.Doctor.Photo"
                                             class="card-img-top"
                                             style="object-fit: cover;" alt="@doctorName" />
                                    }
                                    else
                                    {
                                        <div class="default-doctor-avatar d-flex flex-column align-items-center justify-content-center">
                                            <i class="fas fa-user-md fa-3x mb-2"></i>
                                            <span>@doctorName</span>
                                        </div>
                                    }
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title text-primary text-truncate" title="@doctorName">
                                        <i class="fas fa-user-md"></i> @doctorName
                                    </h5>
                                    <p class="mb-1"><span class="badge bg-info text-dark">@specialtyName</span></p>
                                    <div class="d-flex justify-content-between align-items-center mb-2 p-2 bg-light rounded">
                                        <span class="fw-bold text-dark"><i class="fas fa-calendar me-2 text-primary"></i> @a.Date.ToString("dd MMM yyyy")</span>
                                        <span class="fw-bold text-dark"><i class="fas fa-clock me-2 text-success"></i> @a.TimeSlot.ToString(@"hh\:mm")</span>
                                    </div>
                                    <p class="mb-0"><span class="@statusClass">@a.Status</span></p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<script>
    function confirmCancel(doctorName, date, time) {
        return confirm(`Are you sure you want to cancel your appointment with Dr. ${doctorName} on ${date} at ${time}?`);
    }
</script>

<style>
    .appointment-card {
        border-radius: 12px;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

        .appointment-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.15);
        }

    .default-doctor-avatar {
        background-color: #f0f8ff;
        color: #4682b4;
        text-align: center;
        padding: 1rem;
    }
</style>